apply plugin: 'com.android.library'

// JitPack Maven
apply plugin: 'com.github.dcendents.android-maven'
// Your Group
group='com.github.bodismile'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']//将so文件目录指向libs目录
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

repositories{
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    provided 'com.android.support:appcompat-v7:23.2.0'
    provided 'com.android.support:support-v4:23.2.0'
    //视图加载
    provided 'com.jakewharton:butterknife:7.0.1'
    //图片加载
    provided 'com.github.bumptech.glide:glide:3.7.0'
    //icepick:Android Instance状态保存与恢复
    provided 'frankiesardo:icepick:3.2.0'
    provided 'frankiesardo:icepick-processor:3.2.0'
    //rx相关
    provided 'io.reactivex:rxjava:1.1.6'
    provided 'io.reactivex:rxandroid:1.2.0'
    //友盟统计
    provided 'com.umeng.analytics:analytics:latest.integration'
}

//-------------------------------------------

// 指定编码
tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//指定javadoc编码格式
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
